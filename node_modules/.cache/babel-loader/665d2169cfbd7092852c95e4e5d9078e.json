{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"AllTags\",\n  methods: {\n    async fetchCatFacts() {\n      await axios.get('http://localhost:9090/doctors-all').then(response => this.doctors = this.splitToChunks(response.data, 3));\n    },\n    splitToChunks(array, parts) {\n      let result = [];\n      for (let i = parts; i > 0; i--) {\n        result.push(array.splice(0, Math.ceil(array.length / i)));\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"mappings":";AAYA;AAEA;EACAA;EACAC;IACA;MACA,sEACA,mDACA;IACA;IACAC;MACA;MACA;QACAC;MACA;MACA;IACA;EACA;AACA","names":["name","methods","splitToChunks","result"],"sourceRoot":"src/views","sources":["AllTags.vue"],"sourcesContent":["<template>\n  <div>\n    <v-autocomplete\n        chips\n        multiple\n        solo\n    ></v-autocomplete>\n  </div>\n\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"AllTags\",\n  methods : {\n    async fetchCatFacts() {\n      await axios.get('http://localhost:9090/doctors-all').then(response => (\n          this.doctors = this.splitToChunks(response.data, 3)\n      ))\n    },\n    splitToChunks(array, parts) {\n      let result = [];\n      for (let i = parts; i > 0; i--) {\n        result.push(array.splice(0, Math.ceil(array.length / i)));\n      }\n      return result;\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}
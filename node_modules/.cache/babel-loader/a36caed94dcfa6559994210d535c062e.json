{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport HelloWorld from '../components/HelloWorld';\nexport default {\n  name: 'HomeView',\n  data() {\n    return {\n      doctors: null\n    };\n  },\n  async mounted() {\n    console.log('ads');\n    await this.fetchCatFacts();\n  },\n  components: {\n    HelloWorld\n  },\n  methods: {\n    async fetchCatFacts() {\n      await axios.get('http://localhost:9090/doctors-all').then(response => this.doctors = this.splitToChunks(response.data));\n    },\n    splitToChunks(array, parts) {\n      let result = [];\n      for (let i = parts; i > 0; i--) {\n        result.push(array.splice(0, Math.ceil(array.length / i)));\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"mappings":";AAgCA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;IACA;EACA;EACA;IAEAC;IACA;EACA;EACAC;IACAC;EACA;EACAC;IACA;MACA,sEAEA,gDAGA;IACA;IACAC;MACA;MACA;QACAC;MACA;MACA;IACA;EACA;AACA","names":["name","data","doctors","console","components","HelloWorld","methods","splitToChunks","result"],"sourceRoot":"src/views","sources":["HomeView.vue"],"sourcesContent":["<template>\n  <div>\n    <v-container>\n      <v-row>\n        <v-card\n            elevation=\"2\"\n        ></v-card>\n        <v-card\n            elevation=\"2\"\n        ></v-card>\n        <v-card\n            elevation=\"2\"\n        ></v-card>\n      </v-row>\n    </v-container>\n\n\n\n\n\n\n\n    <hello-world />\n  </div>\n\n\n\n\n\n</template>\n\n<script>\n  import axios from 'axios'\n  import HelloWorld from '../components/HelloWorld'\n\n  export default {\n    name: 'HomeView',\n    data () {\n      return {\n        doctors: null\n      }\n    },\n    async mounted() {\n\n      console.log('ads')\n      await this.fetchCatFacts()\n    },\n    components: {\n      HelloWorld,\n    },\n    methods: {\n      async fetchCatFacts() {\n        await axios.get('http://localhost:9090/doctors-all').then(response => (\n\n            this.doctors = this.splitToChunks(response.data)\n\n\n        ))\n      },\n      splitToChunks(array, parts) {\n        let result = [];\n        for (let i = parts; i > 0; i--) {\n          result.push(array.splice(0, Math.ceil(array.length / i)));\n        }\n        return result;\n      },\n    },\n  }\n</script>\n\n"]},"metadata":{},"sourceType":"module"}
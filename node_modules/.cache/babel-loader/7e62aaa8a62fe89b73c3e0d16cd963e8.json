{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"AboutView\",\n  data() {\n    return {\n      doctors: [],\n      create: '',\n      tags: [],\n      value: null\n    };\n  },\n  async mounted() {\n    await this.fetchDoctors();\n  },\n  methods: {\n    async fetchTags() {\n      await axios.get('http://localhost:9090/specialitylookup-all').then(response => {\n        let ab = response.data.sort();\n        console.log(ab);\n        this.tags = ab.map(function (obj) {\n          return obj.specialityName;\n          // return {text : obj.specialityName, value : obj.specialityName}\n        });\n      });\n    },\n\n    async fetchDoctors() {\n      await this.fetchTags();\n      await axios.get('http://localhost:9090/doctors-all').then(response => {\n        let createArr = [{\n          \"name\": \"\",\n          \"address\": \"\",\n          \"location\": \"\",\n          \"schedule\": [],\n          \"speciality\": []\n        }];\n        this.doctors = this.chunk([...createArr, ...response.data.reverse()], 3);\n      });\n    },\n    chunk(arr, chunkSize) {\n      if (chunkSize <= 0) throw \"Invalid chunk size\";\n      let R = [];\n      for (let i = 0, len = arr.length; i < len; i += chunkSize) R.push(arr.slice(i, i + chunkSize));\n      return R;\n    }\n  }\n};","map":{"version":3,"mappings":";AA6EA;AAGA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACA;IACA;EAEA;EACAC;IACA;MACA;QACA;QACAC;QACA;UACA;UACA;QACA;MACA;IACA;;IACA;MACA;MACA;QACA;UACA;UACA;UACA;UACA;UACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA,2DACAC;MACA;IACA;EACA;AAKA","names":["name","data","doctors","create","tags","value","methods","console","chunk","R"],"sourceRoot":"src/views","sources":["AboutView.vue"],"sourcesContent":["<template>\n  <div>\n    {{tags}}\n    <v-container>\n      <v-row v-for=\"(row, index) in doctors\" :key=\"index\" no-gutters>\n        <v-col v-for=\"(doctor, index) in row\" :key=\"index\" style=\"max-width: 390px; padding: 15px\">\n\n          <v-card v-if=\"doctor.name == ''\" class=\"grey lighten-5\" elevation=\"5\" outlined shaped>\n            <v-card-title>Create new doctor</v-card-title>\n            <v-container>\n              {{value}}\n              <v-text-field placeholder=\"Name\"> </v-text-field>\n              <v-autocomplete v-model=\"value\" :items=tags  :item-value=\"value\" placeholder=\"Speciality\"> </v-autocomplete>\n              <v-text-field placeholder=\"Address\"> </v-text-field>\n              <v-text-field placeholder=\"Location\"> </v-text-field>\n\n            </v-container>\n\n<!--                v-on:keyup.enter=\"pushCreateSpeciality(tag.txtModel)\" v-model=\"tag.txtModel\" -->\n\n\n\n<!--            <v-card-subtitle>{{doctor.speciality.join(', ')}}</v-card-subtitle>-->\n            <v-card-text>{{doctor.address}} <br> {{doctor.location}} </v-card-text>\n\n<!--            <v-card-subtitle>{{doctor.schedule.join(', ')}}</v-card-subtitle>-->\n            <v-divider class=\"mx-4\"></v-divider>\n            <v-card-actions class=\"pt-0\">\n              <v-btn\n                  text\n                  color=\"teal accent-4\"\n                  @click=\"reveal = false\"\n              >\n                Submit\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n\n\n          <v-card v-else class=\"grey lighten-5\" elevation=\"5\" outlined shaped>\n            <v-card-title>{{doctor.name}}</v-card-title>\n            <!--            <v-card-subtitle>{{doctor.speciality.join(', ')}}</v-card-subtitle>-->\n            <v-divider class=\"mx-4\"></v-divider>\n            <v-card-text>{{doctor.address}} <br> {{doctor.location}} </v-card-text>\n\n            <!--            <v-card-subtitle>{{doctor.schedule.join(', ')}}</v-card-subtitle>-->\n            <v-divider class=\"mx-4\"></v-divider>\n            <v-card-actions class=\"pt-0\">\n              <v-btn\n                  text\n                  color=\"teal accent-4\"\n                  @click=\"reveal = false\"\n              >\n                Learn More\n              </v-btn>\n              <v-btn\n                  text\n                  color=\"teal accent-4\"\n                  @click=\"reveal = false\"\n              >\n                Schedule\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n\n\n\n        </v-col>\n      </v-row>\n    </v-container>\n\n\n  </div>\n</template>\n\n<script>\n\nimport axios from \"axios\";\n\n\nexport default {\n  name: \"AboutView\",\n  data() {\n    return {\n      doctors: [],\n      create: '',\n      tags : [],\n      value : null\n    }\n  },\n  async mounted() {\n    await this.fetchDoctors()\n\n  },\n  methods : {\n    async fetchTags() {\n      await axios.get('http://localhost:9090/specialitylookup-all').then(response => {\n        let ab = response.data.sort()\n        console.log(ab);\n        this.tags = ab.map(function (obj) {\n          return obj.specialityName\n          // return {text : obj.specialityName, value : obj.specialityName}\n        });\n      });\n    },\n    async fetchDoctors() {\n      await this.fetchTags();\n      await axios.get('http://localhost:9090/doctors-all').then(response => {\n        let createArr = [{\n          \"name\": \"\",\n          \"address\": \"\",\n          \"location\": \"\",\n          \"schedule\": [],\n          \"speciality\": [],\n        }];\n        this.doctors = this.chunk([...createArr, ...response.data.reverse()], 3)\n      });\n    },\n    chunk(arr, chunkSize) {\n      if (chunkSize <= 0) throw \"Invalid chunk size\";\n      let R = [];\n      for (let i=0,len=arr.length; i<len; i+=chunkSize)\n        R.push(arr.slice(i,i+chunkSize));\n      return R;\n    },\n  }\n\n\n\n\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}